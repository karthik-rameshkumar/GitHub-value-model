name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Backend Tests
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Lint backend
      working-directory: ./backend
      run: npm run lint

    - name: Test backend
      working-directory: ./backend
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        NODE_ENV: test

    # Frontend Tests
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Lint frontend
      working-directory: ./frontend
      run: npm run lint

    - name: Test frontend
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run npm audit (backend)
      working-directory: ./backend
      run: npm audit --audit-level moderate
      
    - name: Run npm audit (frontend)
      working-directory: ./frontend
      run: npm audit --audit-level moderate

  docker-build:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Test Docker Compose
      run: |
        docker-compose config
        docker-compose build --no-cache

  health-check:
    runs-on: ubuntu-latest
    needs: [docker-build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Start services
      run: |
        docker-compose up -d
        sleep 30

    - name: Check backend health
      run: |
        curl -f http://localhost:3001/health || exit 1

    - name: Check frontend accessibility
      run: |
        curl -f http://localhost:3000 || exit 1

    - name: Cleanup
      run: docker-compose down