services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: essp-postgres
    environment:
      POSTGRES_DB: essp_dashboard
      POSTGRES_USER: essp_user
      POSTGRES_PASSWORD: essp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U essp_user -d essp_dashboard"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: essp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: essp-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://essp_user:essp_password@postgres:5432/essp_dashboard
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: essp_dashboard
      DATABASE_USER: essp_user
      DATABASE_PASSWORD: essp_password
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: essp-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001
      CHOKIDAR_USEPOLLING: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm start

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: essp-network